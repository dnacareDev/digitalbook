<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalBook.Mapper.MethodMapper">
	
	<!-- 재배 프로토콜 검색 -->
	<select id="SearchMethod" resultType="Method">
		SELECT m.*, d3.*, d2.*, d1.*, e.*, d1.division as d1_name, d2.division as d2_name, d3.division as d3_name,
		(SELECT COUNT(*) FROM step s WHERE s.method_id = m.method_id) as step_no
		FROM method m
		LEFT JOIN division d3 ON m.division_id = d3.division_id
		LEFT JOIN division d2 ON d3.division_parents = d2.division_id
		LEFT JOIN division d1 ON d2.division_parents = d1.division_id
		LEFT JOIN eaches e ON m.eaches_id = e.eaches_id
		WHERE m.user_group = #{user_group}
		<choose>
			<when test="search_type == null || search_type.equals('none')">
				AND (
					m.method_code LIKE CONCAT('%', #{keyword}, '%')
					OR
					m.method_title LIKE CONCAT('%', #{keyword}, '%')
					OR
					d1.division LIKE CONCAT('%', #{keyword}, '%')
					OR
					d2.division LIKE CONCAT('%', #{keyword}, '%')
					OR
					d3.division LIKE CONCAT('%', #{keyword}, '%')
					OR
					m.method_contents LIKE CONCAT('%', #{keyword}, '%')
				)
			</when>
			<otherwise>
				AND ${search_type} LIKE CONCAT('%', #{keyword}, '%')
			</otherwise>
		</choose>
		ORDER BY method_id DESC
		LIMIT #{offset}, #{limit}
	</select>
	
	<!-- 재배 프로토콜 갯수 검색 -->
	<select id="SearchMethodCount" resultType="int">
		SELECT COUNT(*)
		FROM method m
		LEFT JOIN division d3 ON m.division_id = d3.division_id
		LEFT JOIN division d2 ON d3.division_parents = d2.division_id
		LEFT JOIN division d1 ON d2.division_parents = d1.division_id
		LEFT JOIN eaches e ON m.eaches_id = e.eaches_id
		WHERE m.user_group = #{user_group}
		<choose>
			<when test="search_type == null || search_type.equals('none')">
				AND (
					m.method_code LIKE CONCAT('%', #{keyword}, '%')
					OR
					m.method_title LIKE CONCAT('%', #{keyword}, '%')
					OR
					d1.division LIKE CONCAT('%', #{keyword}, '%')
					OR
					d2.division LIKE CONCAT('%', #{keyword}, '%')
					OR
					d3.division LIKE CONCAT('%', #{keyword}, '%')
					OR
					m.method_contents LIKE CONCAT('%', #{keyword}, '%')
				)
			</when>
			<otherwise>
				AND ${search_type} LIKE CONCAT('%', #{keyword}, '%')
			</otherwise>
		</choose>
	</select>
	
	<!-- 입력단위 조회 -->
	<select id="SelectEaches" parameterType="String" resultType="Eaches">
		SELECT * FROM eaches
		WHERE eaches_type = #{eaches_type}
	</select>
	
	<!-- 조사방법 조회 -->
	<select id="SelectResearch" parameterType="int" resultType="Research">
		SELECT * FROM research
		WHERE division_id = #{division_id} AND user_group = #{user_group}
	</select>
	
	<!-- 재배 프로토콜 등록 -->
	<insert id="InsertMethod" parameterType="Method" useGeneratedKeys="true" keyProperty="last_method_id">
		INSERT INTO method
		(
			division_id,
			method_code,
			method_title,
			method_contents,
			method_input,
			eaches_id,
			method_comment,
			method_status,
			create_date,
			modify_date,
			user_group,
			user_id,
			method_share
		)
		VALUES
		(
			#{division_id},
			#{method_code},
			#{method_title},
			#{method_contents},
			#{method_input},
			#{eaches_id},
			#{method_comment},
			0,
			NOW(),
			NOW(),
			#{user_group},
			#{user_id},
			#{method_share}
		)
	</insert>
	
	<!-- 최근 재배 프로토콜 ID -->
	<select id="selectLastMethodCode" parameterType="int" resultType="String">
		SELECT method_code FROM method
		WHERE user_group = #{user_group}
		ORDER BY method_id DESC
		LIMIT 1
	</select>
	
	<!-- 실험 / 재배 단계 등록(Step) -->
	<insert id="InsertStep" parameterType="Step">
		INSERT INTO step
		(
			method_id,
			research_id,
			step_index,
			step_comment,
			step_depth,
			step_parents
		)
		VALUES
		(
			#{method_id},
			#{research_id},
			#{step_index},
			#{step_comment},
			0,
			0
		)
	</insert>
	
	<!-- 재배 프로토콜 detial -->
	<select id="selectMethodDetail" resultType="Method">
		SELECT m.*, d1.*, d2.*, d3.*, e.*, d1.division_id as d1_id, d2.division_id as d2_id, d3.division_id as d3_id,
		d1.division as d1_name, d2.division as d2_name, d3.division as d3_name, e.eaches_name
		FROM method m
		LEFT JOIN division d3 ON m.division_id = d3.division_id
		LEFT JOIN division d2 ON d3.division_parents = d2.division_id
		LEFT JOIN division d1 ON d2.division_parents = d1.division_id
		LEFT JOIN eaches e ON m.eaches_id = e.eaches_id
		WHERE method_id = #{method_id}
	</select>
	
	<!-- 재배 프로토콜 step detail list -->
	<select id="selectStepDetailList" resultType="Step">
		SELECT s.*, r.research_contents as research_contents FROM step s
		LEFT JOIN research r ON s.research_id = r.research_id
		WHERE method_id = #{method_id}
	</select>
	
	<!-- 재배 프로토콜 수정 -->
	<update id="updateMethod" parameterType="Method">
		UPDATE method
		SET method_title = #{method_title},
			method_contents = #{method_contents},
			method_input = #{method_input},
			eaches_id = #{eaches_id},
			method_comment = #{method_comment},
			modify_date = NOW(),
			method_status = 1,
			method_share = #{method_share}
		WHERE method_id = #{method_id}
	</update>
	
	<!-- step 삭제 -->
	<delete id="deleteStep" parameterType="int">
		DELETE FROM step
		WHERE step_id = #{step_id}
	</delete>
	
	<!-- 재배 프로토콜 삭제 -->
	<delete id="deleteMethod" parameterType="int">
		DELETE FROM method
		WHERE method_id = #{method_id}
	</delete>
	
	<!-- 변경 이력 등록 -->
	<insert id="insertRecord" parameterType="Record">
		INSERT INTO record
		(record_status, record_type, record_type_code, record_date)
		VALUES
		(#{record_status}, #{record_type}, #{record_type_code}, NOW())
	</insert>
	
	<!-- 프로토콜 변경 이력 조회 -->
	<select id="selectRecordList" parameterType="int" resultType="Record">
		SELECT * FROM record
		WHERE record_type = #{record_type}
		ORDER BY record_id DESC
	</select>
	
	<!-- 프로토콜 승인 -->
	<update id="updateMethodStatus" parameterType="int">
		UPDATE method
		SET method_status = 2
		WHERE method_id = #{method_id}
	</update>
	
	<!-- 엑셀 다운로드할 프로토콜 list -->
	<select id="selectMethodExcelList" parameterType="int" resultType="Method">
		SELECT m.*, d3.*, d2.*, d1.*, e.*, d1.division as d1_name, d2.division as d2_name, d3.division as d3_name,
		(SELECT COUNT(*) FROM step s WHERE s.method_id = m.method_id) as step_no
		FROM method m
		LEFT JOIN division d3 ON m.division_id = d3.division_id
		LEFT JOIN division d2 ON d3.division_parents = d2.division_id
		LEFT JOIN division d1 ON d2.division_parents = d1.division_id
		LEFT JOIN eaches e ON m.eaches_id = e.eaches_id
		WHERE m.user_group = #{user_group}
		ORDER BY method_id DESC
	</select>
	
</mapper>